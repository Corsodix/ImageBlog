// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id         Int      @id @default(autoincrement())
  text       String?
  published  Boolean  @default(true)
  sport      String
  value      Float
  favorite   Boolean
  img_url    String
  img_medium String
  img_thumb  String
  img_title  String
  img_width  Int
  img_height Int
  img_ratio  Float
  videoUrl   String?
  createdAt  DateTime @default(now())

  auth_user AuthUser @relation(fields: [userId], references: [id])
  userId    String

  @@map("post")
}

model AuthUser {
  id           String        @id @unique
  auth_session AuthSession[]
  auth_key     AuthKey[]
  name         String
  surname      String
  email        String        @unique
  role         Role          @default(USER)
  division     String
  firm         String
  about        String
  img          String
  // here you can add custom fields for your user
  // e.g. name, email, username, roles, etc.
  Post         Post[]

  @@map("auth_user")
}

model AuthSession {
  id             String   @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String   @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}

enum Role {
  USER
  ADMIN
}
